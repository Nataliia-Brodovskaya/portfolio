{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","header","responce","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Viev","comic","_jsxs","className","children","Link","to","SingleComicPage","comicId","useParams","setComic","_useMarvelService","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/5.5dc2c575.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\n          _apiKey = 'apikey=18228a75130fb889e49ab1c67e5361c7',\n          _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n\n\n    const _transformCharacter = (char) => {\n        return {\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            id: char.id,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"Not available\",\n\n        }\n    }\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, header = {'Content-Type': 'application/json'}) => {\n        setLoading(true);\n\n    try { \n        const responce = await fetch(url, {method, body, header}); \n        \n        if(!responce.ok) {\n            throw new Error (`Couldn't fetch${url}, status:${responce.status}`);\n        }   \n\n        const data = await responce.json();\n\n        setLoading(false);\n        return data;\n\n    } catch(e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n\n    }\n    }, []);\n\n    const clearError = useCallback(() =>setError(null), []);\n\n    return {loading, request, error, clearError}\n    \n}\n","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\n\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams();\n\n\n    const [comic, setComic] = useState(null);\n\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateComic();\n    }, [comicId])\n\n\n    const updateComic = () => {\n        clearError();\n        getComic(comicId)\n            .then(onComicLoaded)\n\n    }\n\n    const onComicLoaded = (comic) => {\n       setComic(comic);\n    }\n\n    const errorMessage = error? <ErrorMessage/> : null;\n    const spinner = loading? <Spinner/> : null;\n    const content = !(errorMessage || spinner || !comic) ? <Viev comic={comic}/> : null;\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n        \n    )\n}\n\nconst Viev = ({comic}) => {\n    const {title, thumbnail, description, pageCount, language, price} = comic;\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\n\nexport default SingleComicPage;"],"sourceRoot":""}