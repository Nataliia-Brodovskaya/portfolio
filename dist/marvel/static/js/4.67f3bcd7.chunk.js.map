{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","header","responce","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","errorMessage","spinner","Spinner","arr","item","className","children","_jsxs","Link","to","renderItems","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/4.67f3bcd7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\n          _apiKey = 'apikey=18228a75130fb889e49ab1c67e5361c7',\n          _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n\n\n    const _transformCharacter = (char) => {\n        return {\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            id: char.id,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"Not available\",\n\n        }\n    }\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, header = {'Content-Type': 'application/json'}) => {\n        setLoading(true);\n\n    try { \n        const responce = await fetch(url, {method, body, header}); \n        \n        if(!responce.ok) {\n            throw new Error (`Couldn't fetch${url}, status:${responce.status}`);\n        }   \n\n        const data = await responce.json();\n\n        setLoading(false);\n        return data;\n\n    } catch(e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n\n    }\n    }, []);\n\n    const clearError = useCallback(() =>setError(null), []);\n\n    return {loading, request, error, clearError}\n    \n}\n","import { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);      \n            getAllComics(offset)\n            .then(onComicsListLoaded)\n    }  \n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => (offset + 8));\n        setComicsEnded(ended)\n\n    }\n\n    function renderItems(arr) {\n        const items = arr.map(item => {\n                return (\n                    <li className=\"comics__item\" key={item.id}>\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                    </li> \n                )\n            })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const errorMessage = error? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const items = renderItems(comicsList);\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;"],"sourceRoot":""}