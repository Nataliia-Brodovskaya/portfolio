{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","header","responce","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Viev","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","resourceURI","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","info","this","setState","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.34198df7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\n          _apiKey = 'apikey=18228a75130fb889e49ab1c67e5361c7',\n          _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n\n\n    const _transformCharacter = (char) => {\n        return {\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            id: char.id,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"Not available\",\n\n        }\n    }\n\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, header = {'Content-Type': 'application/json'}) => {\n        setLoading(true);\n\n    try { \n        const responce = await fetch(url, {method, body, header}); \n        \n        if(!responce.ok) {\n            throw new Error (`Couldn't fetch${url}, status:${responce.status}`);\n        }   \n\n        const data = await responce.json();\n\n        setLoading(false);\n        return data;\n\n    } catch(e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n\n    }\n    }, []);\n\n    const clearError = useCallback(() =>setError(null), []);\n\n    return {loading, request, error, clearError}\n    \n}\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect (() => {\n        updateChar();\n    }, []);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n            getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n        const errorMessage = error? <ErrorMessage/> : null;\n        const spinner = loading? <Spinner/> : null;\n        const content = !(errorMessage || spinner) ? <Viev char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\"\n                            onClick={updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n\n\nconst Viev = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'}\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\n\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, []);\n\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);      \n            getAllCharacters(offset)\n            .then(onCharListLoaded)\n\n    }  \n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList([...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => (offset + 9));\n        setCharEnded(ended)\n\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n                let imgStyle = {'objectFit' : 'cover'};\n                if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') {\n                    imgStyle = {'objectFit' : 'unset'}\n                }\n\n                return (\n                    <li className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                    </li> \n                )\n            })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n    const errorMessage = error? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n\n}\n\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired \n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n\n    const updateChar = () => {\n\n        const {charId} = props;\n        if(!charId){\n            return\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n\n    }\n\n    const onCharLoaded = (char) => {\n       setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>; \n    const errorMessage = error? <ErrorMessage/> : null;\n    const spinner = loading? <Spinner/> : null;\n    const content = !(errorMessage || spinner || !char) ? <Viev char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst Viev = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') {\n        imgStyle = {'objectFit' : 'contain'}\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length < 0 ? 'There is no comics with this character' : null}\n                {\n                    \n                    comics.map((item, i) => {\n                        \n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                            <a href={item.resourceURI}>{item.name}</a>                        \n                            </li>\n                        )\n                    })\n                }\n\n                <li className=\"char__comics-item\">\n                    All-Winners Squad: Band of Heroes (2011) #3\n                </li>\n\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({\n            error: true\n        })\n    }\n\n    render(){\n        if(this.state.error){\n            return <ErrorMessage/>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n    const [selectedChar, setChar] = useState(null)\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>                    \n            </ErrorBoundary>\n\n            <div className=\"char__content\">\n            <ErrorBoundary>\n                <CharList onCharSelected={onCharSelected}/>\n            </ErrorBoundary>\n\n            <ErrorBoundary>\n                <CharInfo charId={selectedChar}/>\n            </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n\n    )\n}\n\nexport default MainPage;\n"],"sourceRoot":""}